from .shared import (
    fetch_gh_file,
    read_source_file,
    update_autogenerated_section,
    write_output_file,
)
from openad.helpers.output import output_text


def oad_update_readme(filename="README.md"):
    """
    Update the main README.md for the openad-toolkit repo with the latest OpenAD description.

    WARNING: this will fetch the README.md from the current main branch of the
    openad-toolkit repo. If you have local changes, they will be overwritten.

    - Copy the content of the current README.md on the main branch of the openad-toolkit repo.
    - Update the page with the latest OpenAD description from the _source/description.txt file.
    - Store result in _output/openad-toolkit/README.md
    """

    output_text(
        f"<h1>Updating <yellow>{filename}</yellow> with OpenAD description</h1>",
        pad_top=2,
    )

    # Read base file content
    readme_md = fetch_gh_file("README.md")
    if not readme_md:
        return

    # Read source file content
    description_txt = read_source_file("description.txt")
    if not description_txt:
        return

    # Insert description
    readme_md = update_autogenerated_section(readme_md, "description", description_txt)
    if not readme_md:
        return

    # Write to output file
    write_output_file("openad-toolkit/" + filename, readme_md)
